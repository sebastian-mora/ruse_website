
service: api-ruse-tech
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: v1
  region: us-west-2
  apiGateway:
    shouldStartNameWithService: True
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:DeleteObject"
          Resource: 
            - "arn:aws:s3:::blogs.ruse.tech"
            - "arn:aws:s3:::blogs.ruse.tech/*"
            - "arn:aws:s3:::cdn.ruse.tech/*"
            - "arn:aws:s3:::cdn.ruse.tech"
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
          Resource:
            - "Fn::GetAtt": [ BlogMetadata, Arn ]

  resources: #cloudformation syntax
    Resources:
      GatewayResponseDefault4XX:
        Type: 'AWS::ApiGateway::GatewayResponse'
        Properties:
          ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          ResponseType: DEFAULT_4XX
          RestApiId:
            Ref: 'ApiGatewayRestApi'
      BlogMetadata:
          Type: AWS::DynamoDB::Table
          Properties:
            TableName: BlogMetadata
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: S
            KeySchema:
              - AttributeName: id
                KeyType: HASH

package:
  individually: True
  exclude:
    # Exclude everything first.
    - '**/*'

plugins:
  - serverless-layers
custom:
  serverless-layers:
    layersDeploymentBucket: ruse-api-layers

functions:
  
  auth:
    handler: auth/auth.handler
    package:
      include:
        - auth/auth.py
        - auth/jwks.json

  ## BLOG FUNCTIONS
  listBlogs:
    handler: blogs/list.list
    events:
      - http:
          path: blogs
          method: get
          cors: True
    package:
      include:
        - blogs/**
    environment:
      BLOGMETADATA: metadata.json
      BUCKET: blogs.ruse.tech

  getBlog:
    handler: blogs/get.get
    events:
      - http:
          path: blogs/{title}
          method: get
          cors: True
    environment:
      BLOGMETADATA: metadata.json
      BUCKET: blogs.ruse.tech
      BLOGINDEX: index.md
    package:
      include:
        - blogs/**

  ## Admin Blog Actions
  postBlog:
    handler: blogs/post.post
    events:
      - http:
          path: blogs/add
          method: post
          cors: True
          authorizer: auth
    environment:
      BUCKET: blogs.ruse.tech
    package:
      include:
        - blogs/**
  deleteBlog:
    handler: blogs/delete.delete
    events:
      - http:
          path: blogs/delete
          method: post
          cors: True
          authorizer: auth
    environment:
      BUCKET: blogs.ruse.tech
    package:
      include:
        - blogs/**

  ## S3 Actions

  listAssets:
    handler: s3/listAssets.listAssets
    events:
      - http:
          path: assets
          method: get
          cors: True
    package:
      include:
        - s3/**