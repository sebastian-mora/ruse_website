org: seb1055
app: api-ruse-tech

service: api-ruse-tech
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  region: us-west-2
  apiGateway:
    shouldStartNameWithService: True
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
            - "s3:GetObject"
          Resource:
            - "arn:aws:s3:::blogs.ruse.tech"
            - "arn:aws:s3:::blogs.ruse.tech/*"
            - "arn:aws:s3:::cdn.ruse.tech/*"
            - "arn:aws:s3:::cdn.ruse.tech"
        - Effect: "Allow"
          Action:
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
          Resource:
            - "Fn::GetAtt": [BlogMetadata, Arn]

resources: #cloudformation syntax
  Resources:
    BlogMetadata:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-ruse-tech-blogs
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

package:
  individually: True
  exclude:
    # Exclude everything first.
    - "**/*"

functions:
  ## BLOG FUNCTIONS
  listBlogs:
    name: ${opt:stage}-list-blogs
    handler: blogs/list.list
    events:
      - http:
          path: blogs
          method: get
          cors: True
    package:
      include:
        - blogs/**
    environment:
      db_table: ${opt:stage}-ruse-tech-blogs

  getBlog:
    name: ${opt:stage}-get-blog
    handler: blogs/get.get
    events:
      - http:
          path: blogs/{title}
          method: get
          cors: True
    package:
      include:
        - blogs/**
    environment:
      db_table: ${opt:stage}-ruse-tech-blogs
